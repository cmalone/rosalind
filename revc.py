def reverse_complement(s):
	"""Computes the reverse complement of a strand of DNA"""
	rev_s = reverse_string(s)
	complements = {"A": "T", "C" : "G", "G" : "C", "T" : "A"}

	rev_c = ""
	for i in range(0, len(rev_s)):
		rev_c = rev_c + complements[rev_s[i]]

	return rev_c


def reverse_string(s):
	length = len(s)
	rev_s = ""
	for i in range(1, length + 1):
		rev_s = rev_s + s[length - i]

	return rev_s

s = "CACTGACGCACGGCGTACTCCAGCTCATAAGCACGTTCAGTCCGATCTTGCACCCGTATCGGTACCGATAAGTAAAGGGTAGTGTCATGGCATTCTGCCCCTATCGTCATATTCATGCAATAGTAGTGCGTAGACAAATTCTCGCTTATAACCCGCTAGATTCCGTTTGACTTGGTGTGCCGAGCGAACGTATTCACAGCGCGCTGTCGTGTGAACGGTAGCACCACTCCCTGCGGTCACTTTGGGAGACTGGACATAAACCGTACATAAGTCTACGTAATCGGATGCGTTGCTTCCAAGCCCTGAACACCGCTACGTTTGTCCGGACGGCCTCCTGGCTAATTGATATGTAGGCTAGTTGTCTTTGCAGCATGAACACATAGCCAATACAGTACGCATAAATAATCAAAATCGTCTGTACCGGGGAGCGCAGCGTCATGGTCCCATCACATCCTCTGATGGTAAGCGTTCACCTGCACGTTACAATGACCAAGTCGGAGACTCAATGGATCCGCCCTTCGACATTCTAAGGGAAGAGTCGCAATTGTCCGCTACTACAATCCGTGTAACGCCGAAACTTTGTCAAATCGCCGTGCCGTCGTTCCCTGCGCGCCTACGTGAACCGCTTAGTCTAGGTACCGTGTTCTGTGATTGCAGGACGATGTGTAGAAGCCTTCCCGGTAGGCGTCTATCCGACTCGGGTGATACTTGCTCATCTGCCATTGGGACGCCTTCGACTTTCCTGAGGCATCGTGGACCATCTTCCGTAGTGGCAGTCCTGCAACCCCCTAGTCTGCTTTATACTAGTGAAAATATAACCCGTGCTTTGAGGAATCAGTTCCTTCTCACGACTGCGCTACTTTATCGAGACCAATCACATCACAGACTCTACGGCTCCCGCTGGATGTCGACTCCTGAATAAGC"
print reverse_complement(s)
